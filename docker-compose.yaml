name: microservices-spring

services:
  authorization-server:
    build: ./authorization-server
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000 || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "9000:9000"
    environment:
      WEB_HOST: ${WEB_HOST}
      GATEWAY_HOST: ${GATEWAY_HOST}
      RESOURCE_CLIENT_ID: ${RESOURCE_CLIENT_ID}
      RESOURCE_SECRET_ID: ${RESOURCE_SECRET_ID}
      BFF_CLIENT_ID: ${BFF_CLIENT_ID}
      BFF_SECRET_ID: ${BFF_SECRET_ID}
    extra_hosts:
    - "host.docker.internal:host-gateway"
    - "LOCALHOST_NAME:host-gateway"
  
  oauth2-client-gateway:
    build: ./oauth2-client-gateway
    restart: always
    ports:
      - "8000:8000"
    environment:
      WEB_HOST: ${WEB_HOST}
      GATEWAY_HOST: ${GATEWAY_HOST}
      AUTHORIZATION_INTERNAL_HOST: ${AUTHORIZATION_INTERNAL_HOST}
      RESOURCE_CLIENT_ID: ${RESOURCE_CLIENT_ID}
      RESOURCE_SECRET_ID: ${RESOURCE_SECRET_ID}
      BFF_CLIENT_ID: ${BFF_CLIENT_ID}
      BFF_SECRET_ID: ${BFF_SECRET_ID}
    depends_on:
      - authorization-server
    extra_hosts:
    - "host.docker.internal:host-gateway"
    - "LOCALHOST_NAME:host-gateway"


  # postgresql:
  #   image: postgres:15.10-alpine3.20
  #   restart: always
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
  #   ports:
  #     - ${POSTGRES_PORT}:5432
  #   volumes:
  #     - pg-data:/var/lib/postgresql/data
  #     - ./database/:/docker-entrypoint-initdb.d/

  web-consulting-hub:
    build: ./web/proxima-consulting-hub
    ports:
      - "3000:3000"
    environment:
      GATEWAY_HOST: ${GATEWAY_HOST}
      GATEWAY_INTERNAL_HOST: ${GATEWAY_INTERNAL_HOST}
    extra_hosts:
    - "host.docker.internal:host-gateway"
    - "LOCALHOST_NAME:host-gateway"

  # nginx_good_law:
  #   image: nginx
  #   volumes:
  #     - type: bind
  #       source: ./nginx/default.conf
  #       target: /etc/nginx/conf.d/default.conf
  #       read_only: true
  #   ports:
  #     - 80:80
  #   depends_on: 
  #     - dash_good_law
  #     - hub_good_law

networks:
  default:
    name: network-microservices-spring

volumes:
  pg-data: