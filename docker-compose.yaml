name: microservices-spring

services:
  authorization-server:
    build: ./authorization-server
    network_mode: host
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/actuator/health || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    environment:
      WEB_HOST: ${WEB_HOST}
      GATEWAY_HOST: ${GATEWAY_HOST}
      RESOURCE_CLIENT_ID: ${RESOURCE_CLIENT_ID}
      RESOURCE_SECRET_ID: ${RESOURCE_SECRET_ID}
      BFF_CLIENT_ID: ${BFF_CLIENT_ID}
      BFF_SECRET_ID: ${BFF_SECRET_ID}
  
  oauth2-client-gateway:
    build: ./oauth2-client-gateway
    network_mode: host
    restart: always
    environment:
      WEB_HOST: ${WEB_HOST}
      GATEWAY_HOST: ${GATEWAY_HOST}
      AUTHORIZATION_HOST: ${AUTHORIZATION_HOST}
      RESOURCE_CLIENT_ID: ${RESOURCE_CLIENT_ID}
      RESOURCE_SECRET_ID: ${RESOURCE_SECRET_ID}
      BFF_CLIENT_ID: ${BFF_CLIENT_ID}
      BFF_SECRET_ID: ${BFF_SECRET_ID}
    depends_on:
      - authorization-server

  # postgresql:
  #   image: postgres:15.10-alpine3.20
  #   restart: always
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
  #   ports:
  #     - ${POSTGRES_PORT}:5432
  #   volumes:
  #     - pg-data:/var/lib/postgresql/data
  #     - ./database/:/docker-entrypoint-initdb.d/

  web-consulting-hub:
    build: ./web/proxima-consulting-hub
    network_mode: host
    environment:
      GATEWAY_HOST: ${GATEWAY_HOST}

networks:
  default:
    name: nt-microservices-spring

volumes:
  vl-postgres-data: